{"version":3,"file":"sidebar.service.js","sourceRoot":"","sources":["../../../../src/modules/sidebar/services/sidebar.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from \"@angular/core\";\n\nexport type SidebarTransition = \"overlay\" | \"push\" | \"scale down\" | \"uncover\" | \"slide along\" | \"slide out\";\n\nexport const SidebarTransition = {\n    Overlay: \"overlay\" as SidebarTransition,\n    Push: \"push\" as SidebarTransition,\n    ScaleDown: \"scale down\" as SidebarTransition,\n    Uncover: \"uncover\" as SidebarTransition,\n    SlideAlong: \"slide along\" as SidebarTransition,\n    SlideOut: \"slide out\" as SidebarTransition\n};\n\nexport type SidebarDirection = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport const SidebarDirection = {\n    Left: \"left\" as SidebarDirection,\n    Right: \"right\" as SidebarDirection,\n    Top: \"top\" as SidebarDirection,\n    Bottom: \"bottom\" as SidebarDirection\n};\n\nexport class SidebarService {\n    public isVisible:boolean;\n    public isAnimating:boolean;\n    public wasJustOpened:boolean;\n\n    public direction:SidebarDirection;\n\n    private _width:number;\n    private _height:number;\n\n    public get width():number {\n        if (this.direction === SidebarDirection.Left) {\n            return this._width;\n        }\n        if (this.direction === SidebarDirection.Right) {\n            return -this._width;\n        }\n        return 0;\n    }\n\n    public set width(width:number) {\n        this._width = width;\n        this.widthChange.emit();\n    }\n\n    public get height():number {\n        if (this.direction === SidebarDirection.Top) {\n            return this._height;\n        }\n        if (this.direction === SidebarDirection.Bottom) {\n            return -this._height;\n        }\n        return 0;\n    }\n\n    public set height(height:number) {\n        this._height = height;\n        this.heightChange.emit();\n    }\n\n    public isVisibleChange:EventEmitter<boolean>;\n    public widthChange:EventEmitter<void>;\n    public heightChange:EventEmitter<void>;\n\n    private _isAnimatingTimeout:number;\n\n    public transition:SidebarTransition;\n\n    constructor(isVisible:boolean = false) {\n        this.isVisible = isVisible;\n        this.isAnimating = false;\n        this.wasJustOpened = false;\n\n        this.isVisibleChange = new EventEmitter<boolean>();\n        this.widthChange = new EventEmitter<void>();\n        this.heightChange = new EventEmitter<void>();\n\n        this.width = 260;\n        this.height = 0;\n\n        this.transition = SidebarTransition.Uncover;\n    }\n\n    public setVisibleState(isVisible:boolean):void {\n        if (this.isVisible !== isVisible) {\n            this.isVisible = isVisible;\n            this.isAnimating = true;\n            this.wasJustOpened = true;\n\n            this.isVisibleChange.emit(isVisible);\n\n            setTimeout(() => this.wasJustOpened = false);\n            clearTimeout(this._isAnimatingTimeout);\n            this._isAnimatingTimeout = window.setTimeout(() => this.isAnimating = false, 500);\n        }\n    }\n\n    public toggleVisibleState():void {\n        this.setVisibleState(!this.isVisible);\n    }\n}\n"]}