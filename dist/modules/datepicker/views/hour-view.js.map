{"version":3,"file":"hour-view.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/views/hour-view.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEjE,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAC1E,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAEpD;IAA8C,4CAAoB;IAAlE;;IAOA,CAAC;IANU,gDAAa,GAApB,UAAqB,IAAiB,EAAE,QAAa;QACjD,+BAA+B;QAC/B,IAAM,YAAY,GAAU,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzF,IAAI,CAAC,aAAa,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/F,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAChC,CAAC;IACL,+BAAC;AAAD,CAAC,AAPD,CAA8C,oBAAoB,GAOjE;;AA2BD,IAAa,mBAAmB;IAAS,uCAAY;IAMjD,6BAAY,QAAkB;eAC1B,kBAAM,QAAQ,EAAE,gBAAgB,CAAC,IAAI,EAAE,IAAI,wBAAwB,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClG,CAAC;IAND,sBAAW,qCAAI;aAAf;YACI,MAAM,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtH,CAAC;;;OAAA;IAKL,0BAAC;AAAD,CAAC,AATD,CAAyC,YAAY,GASpD;AATY,mBAAmB;IAzB/B,SAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,QAAQ,EAAE,goBAqBb;KACA,CAAC;qCAOuB,SAAS;GANrB,mBAAmB,CAS/B;SATY,mBAAmB","sourcesContent":["import { Component, Renderer2 } from \"@angular/core\";\nimport { DatePrecision } from \"../../../misc/util/index\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeHourService extends CalendarRangeService {\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        // Set minutes and seconds to 0\n        const customFormat:string = this.service.localeValues.formats.time.replace(/[ms]/g, \"0\");\n        item.humanReadable = new DateParser(customFormat, this.service.localeValues).format(item.date);\n        item.isOutsideRange = false;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-hour-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table four column hour\">\n<thead *ngIf=\"service.config.mode != 1\">\n    <tr>\n        <th colspan=\"4\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ date }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarHourView extends CalendarView {\n\n    public get date():string {\n        return new DateParser(this.service.localeValues.formats.date, this.service.localeValues).format(this.currentDate);\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Hour, new CalendarRangeHourService(DatePrecision.Date, 6, 4));\n    }\n}\n"]}