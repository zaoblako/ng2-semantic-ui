{"version":3,"file":"calendar-config.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/classes/calendar-config.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,EAAoB,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAClI,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEnE;IAUI,wBAAY,IAAiB,EAAE,SAAuB,EAAE,QAAyB,EAAE,QAAe;QAC9F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAEM,qCAAY,GAAnB,UAAoB,YAAiB;QACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IACL,qBAAC;AAAD,CAAC,AArBD,IAqBC;;AAED;IAAoC,kCAAc;IAC9C,wBAAY,SAAuB,EAAE,QAAyB,EAAE,QAAe;eAC3E,kBAAM,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC/D,CAAC;IACL,qBAAC;AAAD,CAAC,AAJD,CAAoC,cAAc,GAIjD;;AAED;IAAgC,8BAAc;IAC1C;eACI,kBACI,aAAa,CAAC,IAAI,EAClB,IAAI,YAAY,EAAE,EAClB,QAAQ,CAAC;IACjB,CAAC;IACL,iBAAC;AAAD,CAAC,AAPD,CAAgC,cAAc,GAO7C;;AAED;IAAiC,+BAAc;IAC3C;eACI,kBACI,aAAa,CAAC,KAAK,EACnB,IAAI,aAAa,EAAE,EACnB,OAAO,CAAC;IAChB,CAAC;IACL,kBAAC;AAAD,CAAC,AAPD,CAAiC,cAAc,GAO9C;;AAED;IAAgC,8BAAc;IAC1C;eACI,kBACI,aAAa,CAAC,IAAI,EAClB,IAAI,YAAY,EAAE,EAClB,MAAM,CAAC;IACf,CAAC;IACL,iBAAC;AAAD,CAAC,AAPD,CAAgC,cAAc,GAO7C;;AAED;IAAoC,kCAAc;IAC9C;eACI,kBACI,YAAY,CAAC,IAAI,EACjB,aAAa,CAAC,MAAM,EACpB,IAAI,gBAAgB,EAAE,EACtB,gBAAgB,CAAC;IACzB,CAAC;IACL,qBAAC;AAAD,CAAC,AARD,CAAoC,cAAc,GAQjD;;AAED;IAAgC,8BAAc;IAC1C;eACI,kBACI,YAAY,CAAC,QAAQ,EACrB,aAAa,CAAC,MAAM,EACpB,IAAI,YAAY,EAAE,EAClB,MAAM,CAAC;IACf,CAAC;IAEM,iCAAY,GAAnB,UAAoB,YAAiB;QACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACjG,CAAC;IACL,iBAAC;AAAD,CAAC,AAbD,CAAgC,cAAc,GAa7C","sourcesContent":["import { CalendarMode } from \"../services/calendar.service\";\nimport { CalendarMappings, DatetimeMappings, DateMappings, TimeMappings, MonthMappings, YearMappings } from \"./calendar-mappings\";\nimport { DatePrecision, DateUtil } from \"../../../misc/util/index\";\n\nexport abstract class CalendarConfig {\n    public mode:CalendarMode;\n    public precision:DatePrecision;\n    public mappings:CalendarMappings;\n\n    public fallback:string;\n\n    public dateMinBound?:Date;\n    public dateMaxBound?:Date;\n\n    constructor(mode:CalendarMode, precision:DatePrecision, mappings:CalendarMappings, fallback:string) {\n        this.mode = mode;\n        this.precision = precision;\n        this.mappings = mappings;\n        this.fallback = fallback;\n    }\n\n    public updateBounds(providedDate:Date):void {\n        this.dateMinBound = DateUtil.startOf(DatePrecision.Year, new Date(), true);\n        this.dateMinBound.setFullYear(0);\n    }\n}\n\nexport class DateConfigBase extends CalendarConfig {\n    constructor(precision:DatePrecision, mappings:CalendarMappings, fallback:string) {\n        super(CalendarMode.DateOnly, precision, mappings, fallback);\n    }\n}\n\nexport class YearConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Year,\n            new YearMappings(),\n            \"number\");\n    }\n}\n\nexport class MonthConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Month,\n            new MonthMappings(),\n            \"month\");\n    }\n}\n\nexport class DateConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Date,\n            new DateMappings(),\n            \"date\");\n    }\n}\n\nexport class DatetimeConfig extends CalendarConfig {\n    constructor() {\n        super(\n            CalendarMode.Both,\n            DatePrecision.Minute,\n            new DatetimeMappings(),\n            \"datetime-local\");\n    }\n}\n\nexport class TimeConfig extends CalendarConfig {\n    constructor() {\n        super(\n            CalendarMode.TimeOnly,\n            DatePrecision.Minute,\n            new TimeMappings(),\n            \"time\");\n    }\n\n    public updateBounds(providedDate:Date):void {\n        this.dateMaxBound = DateUtil.endOf(DatePrecision.Date, DateUtil.clone(providedDate));\n        this.dateMinBound = DateUtil.previous(DatePrecision.Date, DateUtil.clone(this.dateMaxBound));\n    }\n}\n"]}