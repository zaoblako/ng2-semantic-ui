{"version":3,"file":"calendar-mappings.js","sourceRoot":"","sources":["../../../../src/modules/datepicker/classes/calendar-mappings.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarViewType } from \"../views/calendar-view\";\n\nexport type CalendarMapping<T = CalendarViewType> = Map<CalendarViewType, T>;\n\nexport abstract class CalendarMappings {\n    public initialView:CalendarViewType;\n    public finalView:CalendarViewType;\n    public changed:CalendarMapping;\n    public zoom:CalendarMapping;\n}\n\nexport class DateMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Date;\n        this.finalView = CalendarViewType.Date;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Date],\n            [CalendarViewType.Date, CalendarViewType.Date]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Date],\n            [CalendarViewType.Month, CalendarViewType.Year],\n            [CalendarViewType.Date, CalendarViewType.Month]\n        ]);\n    }\n}\n\nexport class TimeMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Hour;\n        this.finalView = CalendarViewType.Minute;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Minute]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Hour]\n        ]);\n    }\n}\n\nexport class DatetimeMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Date;\n        this.finalView = CalendarViewType.Minute;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Date],\n            [CalendarViewType.Date, CalendarViewType.Hour],\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Minute]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Date],\n            [CalendarViewType.Month, CalendarViewType.Year],\n            [CalendarViewType.Date, CalendarViewType.Month],\n            [CalendarViewType.Hour, CalendarViewType.Date],\n            [CalendarViewType.Minute, CalendarViewType.Hour]\n        ]);\n    }\n}\n\nexport class MonthMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Month;\n        this.finalView = CalendarViewType.Month;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Month]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Year]\n        ]);\n    }\n}\n\nexport class YearMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Year;\n        this.finalView = CalendarViewType.Year;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Year]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Year]\n        ]);\n    }\n}\n"]}