{"version":3,"file":"popup-component-controller.js","sourceRoot":"","sources":["../../../../src/modules/popup/classes/popup-component-controller.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,OAAO,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAGxD;IAAoD,+CAAkB;IAUlE,qCAAY,QAAkB,EAClB,OAAkB,EAClB,gBAAoC,EAC5B,UAAkB,EAC1B,MAAkB;QAJ9B,YAMI,kBAAM,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,MAAM,CAAC,SACrD;QAJmB,gBAAU,GAAV,UAAU,CAAQ;;IAItC,CAAC;IAbD,sBAAW,0DAAiB;aAA5B;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;YAC9C,CAAC;QACL,CAAC;;;OAAA;IAWM,0CAAI,GAAX;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAqB,CAAC,CAAC;YAC/F,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAC/F,CAAC;QAED,iBAAM,IAAI,WAAE,CAAC;IACjB,CAAC;IAES,6CAAO,GAAjB;QACI,iBAAM,OAAO,WAAE,CAAC;QAEhB,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QAC1C,CAAC;IACL,CAAC;IACL,kCAAC;AAAD,CAAC,AApCD,CAAoD,kBAAkB,GAoCrE","sourcesContent":["import { ComponentRef, ElementRef, Type, Renderer2, OnDestroy } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/index\";\nimport { SuiPopupController } from \"./popup-controller\";\nimport { PopupConfig } from \"./popup-config\";\n\nexport class SuiPopupComponentController<T> extends SuiPopupController {\n    // Stores reference to generated content component.\n    private _contentComponentRef?:ComponentRef<T>;\n\n    public get componentInstance():T | undefined {\n        if (this._contentComponentRef) {\n            return this._contentComponentRef.instance;\n        }\n    }\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                private _component:Type<T>,\n                config:PopupConfig) {\n\n        super(renderer, element, componentFactory, config);\n    }\n\n    public open():void {\n        if (!this._contentComponentRef) {\n            this._contentComponentRef = this._componentFactory.createComponent(this._component as Type<T>);\n            this._componentFactory.attachToView(this._contentComponentRef, this.popup.templateSibling);\n        }\n\n        super.open();\n    }\n\n    protected cleanup():void {\n        super.cleanup();\n\n        if (this._contentComponentRef) {\n            this._contentComponentRef.destroy();\n            this._contentComponentRef = undefined;\n        }\n    }\n}\n"]}