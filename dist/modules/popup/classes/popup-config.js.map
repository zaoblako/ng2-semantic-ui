{"version":3,"file":"popup-config.js","sourceRoot":"","sources":["../../../../src/modules/popup/classes/popup-config.ts"],"names":[],"mappings":"AACA,OAAO,EAAuB,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAKrF,MAAM,CAAC,IAAM,YAAY,GAAG;IACxB,KAAK,EAAE,OAAuB;IAC9B,KAAK,EAAE,OAAuB;IAC9B,YAAY,EAAE,cAA8B;IAC5C,KAAK,EAAE,OAAuB;IAC9B,MAAM,EAAE,QAAwB;CACnC,CAAC;AAcF;IAWI,qBAAY,QAA0B;QAA1B,yBAAA,EAAA,aAA0B;QAClC,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAE9B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;IACL,kBAAC;AAAD,CAAC,AAtBD,IAsBC","sourcesContent":["import { TemplateRef } from \"@angular/core\";\nimport { ITemplateRefContext, PositioningPlacement } from \"../../../misc/util/index\";\nimport { IPopup } from \"./popup-controller\";\n\nexport type PopupTrigger = \"hover\" | \"click\" | \"outsideClick\" | \"focus\" | \"manual\";\n\nexport const PopupTrigger = {\n    Hover: \"hover\" as PopupTrigger,\n    Click: \"click\" as PopupTrigger,\n    OutsideClick: \"outsideClick\" as PopupTrigger,\n    Focus: \"focus\" as PopupTrigger,\n    Manual: \"manual\" as PopupTrigger\n};\n\nexport interface IPopupConfig {\n    header?:string;\n    text?:string;\n    placement?:PositioningPlacement;\n    trigger?:PopupTrigger;\n    isInverted?:boolean;\n    delay?:number;\n    isBasic?:boolean;\n    transition?:string;\n    transitionDuration?:number;\n}\n\nexport class PopupConfig implements IPopupConfig {\n    public header?:string;\n    public text?:string;\n    public placement:PositioningPlacement;\n    public trigger:PopupTrigger;\n    public isInverted:boolean;\n    public delay:number;\n    public isBasic:boolean;\n    public transition:string;\n    public transitionDuration:number;\n\n    constructor(defaults:IPopupConfig = {}) {\n        this.placement = PositioningPlacement.TopLeft;\n        this.trigger = PopupTrigger.Hover;\n        this.isInverted = false;\n        this.delay = 0;\n        this.isBasic = false;\n        this.transition = \"scale\";\n        this.transitionDuration = 200;\n\n        Object.assign(this, defaults);\n    }\n}\n"]}