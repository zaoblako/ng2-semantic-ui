{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../src/misc/util/helpers/util.ts"],"names":[],"mappings":"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","sourcesContent":["// Keyboard keycodes.\nexport enum KeyCode {\n    Left = 37,\n    Up = 38,\n    Right = 39,\n    Down = 40,\n\n    Escape = 27,\n    Enter = 13,\n\n    Space = 32,\n    Backspace = 8\n}\n\ninterface IRecursiveObject { [name:string]:IRecursiveObject; }\n\nexport interface ITemplateRefContext<T> { $implicit:T; }\n\nexport interface IAugmentedElement extends Element {\n    closest(selector:string):IAugmentedElement;\n}\n\nexport class HandledEvent {\n    public eventHandled:boolean;\n}\n\nexport interface IDynamicClasses {\n    [name:string]:true;\n}\n\nexport const Util = {\n    Array: {\n        range(n:number, offset:number = 0):number[] {\n            return Array(n).fill(0).map((z, i) => i + offset);\n        },\n        group<T>(items:T[], groupLength:number):T[][] {\n            const mutable = items.slice(0);\n\n            const groups:T[][] = [];\n            while (mutable.length > 0) {\n                groups.push(mutable.splice(0, groupLength));\n            }\n            return groups;\n        },\n        groupBy<T>(items:T[], field:keyof T):{ [name:string]:T[] } {\n            return items.reduce<{ [name:string]:T[] }>(\n                (groups, i) => {\n                    const fieldValue = i[field].toString();\n                    groups[fieldValue] = groups[fieldValue] || [];\n                    groups[fieldValue].push(i);\n                    return groups;\n                },\n                Object());\n        },\n        flatten<T>(items:T[][]):T[] {\n            return items.reduce((is, i) => is.concat(i), []);\n        }\n    },\n\n    String: {\n        padLeft(str:string, length:number, padding:string):string {\n            let s = str;\n            while (s.length < length) {\n                s = padding + s;\n            }\n            return s;\n        }\n    },\n\n    DOM: {\n        parseBooleanAttribute(attributeValue:boolean):boolean {\n            let value = attributeValue;\n            if (typeof attributeValue === \"string\") {\n                value = true;\n            }\n\n            return value;\n        }\n    },\n\n    Object: {\n        readValue<T, U>(object:T, path?:string):U {\n            if (!path) {\n                return object as any as U;\n            }\n\n            let recursed:IRecursiveObject | undefined;\n\n            for (let i = 0, p = path.split(\".\"), len = p.length; i < len; i++) {\n                recursed = (object as any as IRecursiveObject)[p[i]];\n            }\n\n            return recursed as any as U;\n        }\n    },\n\n    Math: {\n        round(r:number, n:number):number {\n            return Math.round(r / n) * n;\n        },\n        roundUp(r:number, n:number):number {\n            return Math.ceil(r / n) * n;\n        },\n        roundDown(r:number, n:number):number {\n            return Math.floor(r / n) * n;\n        },\n        mod(r:number, n:number):number {\n            const rem = r % n;\n            if (rem < 0) {\n                return rem + n;\n            }\n            return rem;\n        }\n    }\n};\n"]}