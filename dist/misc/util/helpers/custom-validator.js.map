{"version":3,"file":"custom-validator.js","sourceRoot":"","sources":["../../../../src/misc/util/helpers/custom-validator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAgD,MAAM,gBAAgB,CAAC;AAC7F,OAAO,EAAE,UAAU,EAAwB,MAAM,eAAe,CAAC;AAMjE;IACI,yBAAoB,KAAO;QAAP,UAAK,GAAL,KAAK,CAAE;QAEpB,sBAAiB,GAAG,cAAO,CAAC,CAAC;IAFN,CAAC;IAIxB,kCAAQ,GAAf,UAAgB,CAAiB;QAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAEM,mDAAyB,GAAhC,UAAiC,EAAa;QAC1C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IACL,sBAAC;AAAD,CAAC,AAZD,IAYC;;AAQD,MAAM,iCAAiC,IAAa;IAChD,MAAM,CAAC;QACH,OAAO,EAAE,aAAa;QACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;QACnC,KAAK,EAAE,IAAI;KACd,CAAC;AACN,CAAC","sourcesContent":["import { NG_VALIDATORS, AbstractControl, ValidationErrors, Validator } from \"@angular/forms\";\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\n\nexport interface ICustomValidatorHost {\n    validate(c:AbstractControl):ValidationErrors | null;\n}\n\nexport class CustomValidator<T extends ICustomValidatorHost> implements Validator {\n    constructor(private _host:T) {}\n\n    public onValidatorChange = () => {};\n\n    public validate(c:AbstractControl):ValidationErrors | null {\n        return this._host.validate(c);\n    }\n\n    public registerOnValidatorChange(fn:() => void):void {\n        this.onValidatorChange = fn;\n    }\n}\n\nexport interface IValidationProvider {\n    provide:InjectionToken<(Function | Validator)[]>;\n    useExisting:Type<any>;\n    multi:boolean;\n}\n\nexport function customValidatorFactory(type:Function):IValidationProvider {\n    return {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => type),\n        multi: true\n    };\n}\n"]}