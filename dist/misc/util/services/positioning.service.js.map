{"version":3,"file":"positioning.service.js","sourceRoot":"","sources":["../../../../src/misc/util/services/positioning.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef } from \"@angular/core\";\nimport Popper, { Modifiers, PopperOptions, Placement, Data } from \"popper.js\";\n\ntype PopperModifiers = Modifiers & {\n    computeStyle?:{\n        gpuAcceleration:boolean;\n    };\n};\ntype PopperInstance = Popper & {\n    options:PopperOptions & {\n        modifiers:PopperModifiers;\n    };\n};\n\nexport type PositioningPlacement = \"auto\" |\n                                   \"top left\" | \"top\" | \"top right\" |\n                                   \"bottom left\" | \"bottom\" | \"bottom right\" |\n                                   \"left top\" | \"left\" | \"left bottom\" |\n                                   \"right top\" | \"right\" | \"right bottom\";\n\nexport const PositioningPlacement = {\n    Auto: \"auto\" as PositioningPlacement,\n    TopLeft: \"top left\" as PositioningPlacement,\n    Top: \"top\" as PositioningPlacement,\n    TopRight: \"top right\" as PositioningPlacement,\n    LeftTop: \"left top\" as PositioningPlacement,\n    Left: \"left\" as PositioningPlacement,\n    LeftBottom: \"left bottom\" as PositioningPlacement,\n    BottomLeft: \"bottom left\" as PositioningPlacement,\n    Bottom: \"bottom\" as PositioningPlacement,\n    BottomRight: \"bottom right\" as PositioningPlacement,\n    RightTop: \"right top\" as PositioningPlacement,\n    Right: \"right\" as PositioningPlacement,\n    RightBottom: \"right bottom\" as PositioningPlacement\n};\n\nexport interface IPositionBoundingBox {\n    width:number;\n    height:number;\n    top:number;\n    left:number;\n    bottom:number;\n    right:number;\n}\n\nfunction placementToPopper(placement:PositioningPlacement):Placement {\n    if (!placement || placement === PositioningPlacement.Auto) {\n        return \"auto\";\n    }\n\n    // All placements of the format: `direction alignment`, e.g. `top left`.\n    const [direction, alignment] = placement.split(\" \");\n\n    // Direction alone covers case of just `top`, `left`, `bottom`, `right`.\n    const chosenPlacement = [direction];\n\n    // Add `start` / `end` to placement, depending on alignment direction.\n    switch (alignment) {\n        case \"top\":\n        case \"left\":\n            chosenPlacement.push(\"start\");\n            break;\n        case \"bottom\":\n        case \"right\":\n            chosenPlacement.push(\"end\");\n            break;\n    }\n\n    // Join with hyphen to create Popper compatible placement.\n    return chosenPlacement.join(\"-\") as Placement;\n}\n\nfunction popperToPlacement(popper:string):PositioningPlacement {\n    if (!popper || popper === \"auto\") {\n        return \"auto\";\n    }\n\n    const [direction, alignment] = popper.split(\"-\");\n\n    const chosenPlacement = [direction];\n\n    switch (direction) {\n        case \"top\":\n        case \"bottom\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"left\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"right\");\n                    break;\n            }\n            break;\n        case \"left\":\n        case \"right\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"top\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"bottom\");\n                    break;\n            }\n            break;\n    }\n\n    return chosenPlacement.join(\" \") as PositioningPlacement;\n}\n\nexport class PositioningService {\n    public readonly anchor:ElementRef;\n    public readonly subject:ElementRef;\n\n    private _popper:PopperInstance;\n    private _popperState:Data;\n    private _placement:PositioningPlacement;\n\n    public get placement():PositioningPlacement {\n        return this._placement;\n    }\n\n    public set placement(placement:PositioningPlacement) {\n        this._placement = placement;\n        this._popper.options.placement = placementToPopper(placement);\n        this.update();\n    }\n\n    public get actualPlacement():PositioningPlacement {\n        if (!this._popperState) {\n            return PositioningPlacement.Auto;\n        }\n\n        return popperToPlacement(this._popperState.placement);\n    }\n\n    public get state():Data {\n        return this._popperState;\n    }\n\n    constructor(anchor:ElementRef, subject:ElementRef, placement:PositioningPlacement, arrowSelector?:string) {\n        this.anchor = anchor;\n        this.subject = subject;\n        this._placement = placement;\n\n        const modifiers:PopperModifiers = {\n            computeStyle: {\n                gpuAcceleration: false\n            },\n            preventOverflow: {\n                escapeWithReference: true,\n                boundariesElement: document.body\n            },\n            arrow: {\n                element: arrowSelector\n            }\n        };\n\n        if (!arrowSelector) {\n            delete modifiers.arrow;\n        }\n\n        this._popper = new Popper(\n            anchor.nativeElement,\n            subject.nativeElement,\n            {\n                placement: placementToPopper(placement),\n                modifiers,\n                onCreate: initial => this._popperState = initial,\n                onUpdate: update => this._popperState = update\n            }) as PopperInstance;\n    }\n\n    public update():void {\n        this._popper.update();\n    }\n\n    public destroy():void {\n        this._popper.destroy();\n    }\n}\n"]}