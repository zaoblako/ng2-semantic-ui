{"version":3,"file":"localization.service.js","sourceRoot":"","sources":["../../../../src/behaviors/localization/services/localization.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from \"@angular/core\";\nimport { ILocaleValues, IPartialLocaleValues, RecursivePartial } from \"../interfaces/values\";\nimport enGB from \"../locales/en-GB\";\nimport * as $extend from \"extend\";\n\nfunction deepClone<T>(obj:T):T {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nfunction deepExtend<T, U>(target:T, source:U):T & U {\n    // Rollup...\n    const extend = ($extend as any).default || $extend;\n    return extend(true, target, source);\n}\n\nfunction lang(language:string):string {\n    return language.toLowerCase().replace(\"-\", \"\");\n}\n\ninterface ILocalizationValuesContainer {\n    [name:string]:IPartialLocaleValues;\n}\n\n@Injectable()\nexport class SuiLocalizationService {\n    private _language:string;\n\n    private _fallbackValues:ILocaleValues;\n    private _values:ILocalizationValuesContainer;\n\n    public get language():string {\n        return this._language;\n    }\n\n    public onLanguageUpdate:EventEmitter<void>;\n\n    constructor() {\n        this.onLanguageUpdate = new EventEmitter<void>();\n\n        this._fallbackValues = enGB;\n        this._values = {};\n        this._language = \"en-GB\";\n        this.load(\"en-GB\", enGB);\n    }\n\n    public setLanguage(language:string):void {\n        if (lang(this._language) !== lang(language)) {\n            this._language = language;\n            this.onLanguageUpdate.emit();\n        }\n    }\n\n    public get(language:string = this.language):ILocaleValues {\n        const values = deepClone(this._fallbackValues);\n        if (!this._values[lang(language)]) {\n            throw new Error(`Locale ${language} is not loaded`);\n        }\n        deepExtend(values, this._values[lang(language)]);\n        return deepClone(values);\n    }\n\n    public override<T extends keyof ILocaleValues>(\n        values:ILocaleValues[T],\n        overrides:RecursivePartial<ILocaleValues[T]>\n    ):ILocaleValues[T] {\n        return deepExtend(deepClone(values), overrides);\n    }\n\n    public load(language:string, values:IPartialLocaleValues):void {\n        this._values[lang(language)] = deepClone(values);\n        this.onLanguageUpdate.emit();\n    }\n\n    public patch(language:string, values:IPartialLocaleValues):void {\n        deepExtend(this._values[lang(language)], values);\n    }\n\n    public interpolate(value:string, variables:[string, string][]):string {\n        return variables.reduce((s, [k, v]) => s.replace(new RegExp(`#{${k}}`, \"g\"), v), value);\n    }\n}\n"]}