{"version":3,"file":"message.js","sourceRoot":"","sources":["../../../../src/collections/message/components/message.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AAqB1G,IAAa,UAAU;IAoBnB;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAc,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAE9B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAEM,4BAAO,GAAd;QAAA,iBAKC;QAJG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,GAAG,EAAE;YAChH,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IACL,iBAAC;AAAD,CAAC,AAvCD,IAuCC;AArCG;IADC,KAAK,EAAE;;iDACqB;AAG7B;IADC,MAAM,CAAC,SAAS,CAAC;8BACD,YAAY;6CAAa;AAO1C;IADC,KAAK,EAAE;;8CACiB;AAGzB;IADC,KAAK,EAAE;;sDACyB;AAGjC;IADC,KAAK,CAAC,OAAO,CAAC;;yCACK;AAlBX,UAAU;IAftB,SAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE,mOAKb;QACG,MAAM,EAAE,CAAC,yFAKZ,CAAC;KACD,CAAC;;GACW,UAAU,CAuCtB;SAvCY,UAAU","sourcesContent":["import { Component, Input, Output, EventEmitter } from \"@angular/core\";\nimport { TransitionController, Transition, TransitionDirection } from \"../../../modules/transition/index\";\n\nexport interface IMessage {\n    dismiss():void;\n}\n\n@Component({\n    selector: \"sui-message\",\n    template: `\n<div class=\"ui message {{ class }}\" *ngIf=\"!isDismissed\" [suiTransition]=\"transitionController\">\n    <i class=\"close icon\" *ngIf=\"isDismissable\" (click)=\"dismiss()\"></i>\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n/* Fix for CSS Bug */\n.ui.icon.visible.message {\n    display: flex !important;\n}\n`]\n})\nexport class SuiMessage implements IMessage {\n    @Input()\n    public isDismissable:boolean;\n\n    @Output(\"dismiss\")\n    public onDismiss:EventEmitter<SuiMessage>;\n\n    public isDismissed:boolean;\n\n    public transitionController:TransitionController;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    @Input(\"class\")\n    public class:string;\n\n    constructor() {\n        this.isDismissable = true;\n        this.onDismiss = new EventEmitter<SuiMessage>();\n\n        this.isDismissed = false;\n\n        this.transitionController = new TransitionController();\n        this.transition = \"fade\";\n        this.transitionDuration = 300;\n\n        this.class = \"\";\n    }\n\n    public dismiss():void {\n        this.transitionController.animate(new Transition(this.transition, this.transitionDuration, TransitionDirection.Out, () => {\n            this.isDismissed = true;\n            this.onDismiss.emit(this);\n        }));\n    }\n}\n"]}